version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash
env:
  # these are local variables to the build config
  variables:
    code_repo_name: "oci-java-micronaut-devops-example"

  # the value of a vaultVariable is the secret-id (in OCI ID format) stored in the OCI Vault service
  # you can then access the value of that secret in your build_spec.yaml commands
  vaultVariables:
  #  EXAMPLE_SECRET: "YOUR-SECRET-OCID"
  
  # exportedVariables are made available to use as parameters in sucessor Build Pipeline stages
  # For this Build to run, the Build Pipeline needs to have a BUILDRUN_HASH parameter set
  exportedVariables:
    - BUILDRUN_HASH

steps:
  - type: Command
    name: "Define unique image tag"
    timeoutInSeconds: 40
    command: |
      echo "OCI_BUILD_RUN_ID => ${OCI_BUILD_RUN_ID}"
      echo "OCI_TRIGGER_COMMIT_HASH => ${OCI_TRIGGER_COMMIT_HASH}"
      echo "OCI_STAGE_ID =>${OCI_STAGE_ID}" 
      echo "OCI_BUILD_RUN_ID=>${OCI_BUILD_RUN_ID}"
      echo "OCI_TRIGGER_COMMIT_HASH	=>${OCI_TRIGGER_COMMIT_HASH}"
      echo "OCI_TRIGGER_SOURCE_BRANCH_NAME =>${OCI_TRIGGER_SOURCE_BRANCH_NAME} "
      echo "OCI_TRIGGER_SOURCE_URL =>${OCI_TRIGGER_SOURCE_URL} "
      echo "OCI_TRIGGER_EVENT_TYPE =>${OCI_TRIGGER_EVENT_TYPE} "
      echo "OCI_PRIMARY_SOURCE_DIR =>${OCI_PRIMARY_SOURCE_DIR} "
      echo "OCI_WORKSPACE_DIR	=> ${OCI_WORKSPACE_DIR} "
      echo "OCI_PRIMARY_SOURCE_NAME => ${OCI_PRIMARY_SOURCE_NAME} "
      echo "OCI_BUILD_STAGE_NAME => ${OCI_BUILD_STAGE_NAME}"
      echo "Last Commit ID (For manual run if needed,as Commit Hash will be empty) -> `git log --format="%H" -n 1|cut -c 1-N`"
